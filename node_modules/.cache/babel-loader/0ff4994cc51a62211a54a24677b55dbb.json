{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18083\\\\Desktop\\\\Thinkful\\\\Pomodoro\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\DisplayStatus.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction DisplayStatus({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimerRunning\n}) {\n  return session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), !isTimerRunning && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": 100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60) // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default DisplayStatus;","map":{"version":3,"sources":["C:/Users/18083/Desktop/Thinkful/Pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/DisplayStatus.js"],"names":["React","minutesToDuration","secondsToDuration","DisplayStatus","session","focusDuration","breakDuration","isTimerRunning","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,aAAT,CAAuB;AACrBC,EAAAA,OADqB;AAErBC,EAAAA,aAFqB;AAGrBC,EAAAA,aAHqB;AAIrBC,EAAAA;AAJqB,CAAvB,EAKG;AACD,SACEH,OAAO,iBACL,uDAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEI,KADZ,UACuB,GADvB,EAEG,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,KAAT,MAAmB,UAAnB,GACGP,iBAAiB,CAACI,aAAD,CADpB,GAEGJ,iBAAiB,CAACK,aAAD,CAJvB,EAIwC,GAJxC,YAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,aAAV,CADpB,eAVF,EAaG,CAACF,cAAD,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbtB,CADF,CAFF,eAmBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBACE,MACC,MAAMN,OAAO,CAACK,aAAf,IACGL,OAAO,CAACI,KAAR,KAAkB,UAAlB,GACGH,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAPJ,CAWI;AAXJ;AAYE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAAG,GACN,MACC,MAAMP,OAAO,CAACK,aAAf,IACGL,OAAO,CAACI,KAAR,KAAkB,UAAlB,GACGH,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAID;AAPI,KAZT,CAoBK;AApBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAnBF,CAFJ;AAoDD;;AAED,eAAeH,aAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction DisplayStatus({\r\n  session,\r\n  focusDuration,\r\n  breakDuration,\r\n  isTimerRunning,\r\n}) {\r\n  return (\r\n    session && (\r\n      <>\r\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n              {session?.label} for{\" \"}\r\n              {session?.label === \"Focusing\"\r\n                ? minutesToDuration(focusDuration)\r\n                : minutesToDuration(breakDuration)}{\" \"}\r\n              minutes\r\n            </h2>\r\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(session?.timeRemaining)} remaining\r\n            </p>\r\n            {!isTimerRunning && <h2>PAUSED</h2>}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={\r\n                  100 -\r\n                  (100 * session.timeRemaining) /\r\n                    (session.label === \"Focusing\"\r\n                      ? focusDuration * 60\r\n                      : breakDuration * 60)\r\n                } // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{\r\n                  width: `${\r\n                    100 -\r\n                    (100 * session.timeRemaining) /\r\n                      (session.label === \"Focusing\"\r\n                        ? focusDuration * 60\r\n                        : breakDuration * 60)\r\n                  }%`,\r\n                }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default DisplayStatus;\r\n"]},"metadata":{},"sourceType":"module"}